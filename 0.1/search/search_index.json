{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Lydie is a set of beautifully designed, powerful, and open-source UI components for Fusion 2.0.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>This is the first iteration of the Frapp\u00e9UI component library. Created 3 years ago, it was planned to be used in creating Frapp\u00e9's interfaces for upcoming games and tools.</p> <p>Now, Frapp\u00e9 no longer uses this version of Frapp\u00e9UI in favor of another UI framework. I have decided to open source the library under a new name -- Lydie.</p>"},{"location":"#features","title":"Features","text":"<ul> <li> <p> Theming support</p> <p>Lydie components were built around theming. Developers can create themes consisting of a custom color scheme and typography set.</p> <p>Lydie supports hot-switching (thanks to Fusion's reactive states), so you can switch UI themes without having to reload.</p> <p> Learn more</p> </li> <li> <p> Extension of existing UI classes</p> <p>Lydie comes with components to extend the functionalities of native UI classes from Roblox, such as TextBoxes, Buttons, etc.</p> <p> Components</p> </li> <li> <p> Built with Fusion</p> <p>Lydie makes full use of the advantages Fusion provides, such as state-first component properties, dynamic theming, and more.</p> </li> <li> <p> Open Source, MIT</p> <p>Lydie is licensed under MIT and available on GitHub</p> <p> License</p> </li> </ul>"},{"location":"#why-the-name-lydie","title":"Why the name Lydie?","text":"<p>The name Lydie comes from one of the playable characters in Atelier Lydie &amp; Suelle \u2013\u2013 Lydie Malen, apart from being obsessed with the Atelier series, Lydie has a rather unique sense of art, just like this library.</p>"},{"location":"Tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"Tags/#buttons","title":"Buttons","text":"<ul> <li>AppBarButton</li> <li>AppTabBarButton</li> <li>BaseButton</li> <li>IconButton</li> <li>IconTextButton</li> <li>TextButton</li> </ul>"},{"location":"Tags/#components","title":"Components","text":"<ul> <li>Divider</li> <li>Shadow</li> <li>Checkbox</li> <li>Slider</li> <li>TextField</li> <li>Toggle</li> <li>AppBarButton</li> <li>AppTabBarButton</li> <li>BaseButton</li> <li>IconButton</li> <li>IconTextButton</li> <li>TextButton</li> <li>AppTabBar</li> <li>BottomAppBar</li> <li>ToolTip</li> <li>TopAppBar</li> <li>Window</li> </ul>"},{"location":"Tags/#controls","title":"Controls","text":"<ul> <li>Checkbox</li> <li>Slider</li> <li>TextField</li> <li>Toggle</li> <li>AppBarButton</li> <li>AppTabBarButton</li> <li>BaseButton</li> <li>IconButton</li> <li>IconTextButton</li> <li>TextButton</li> </ul>"},{"location":"Tags/#modules","title":"Modules","text":"<ul> <li>Constants</li> <li>EnumList</li> <li>Icons</li> <li>Scheme</li> <li>SharedStates</li> </ul>"},{"location":"Tags/#tabs","title":"Tabs","text":"<ul> <li>AppTabBarButton</li> <li>AppTabBar</li> </ul>"},{"location":"Tags/#view","title":"View","text":"<ul> <li>AppTabBar</li> <li>BottomAppBar</li> <li>ToolTip</li> <li>TopAppBar</li> <li>Window</li> </ul>"},{"location":"Tags/#window","title":"Window","text":"<ul> <li>AppBarButton</li> <li>AppTabBarButton</li> <li>AppTabBar</li> <li>BottomAppBar</li> <li>TopAppBar</li> <li>Window</li> </ul>"},{"location":"Components/Divider/","title":"Divider","text":"<p>Divider is a thin grey line, used to separate multiple objects.</p>","tags":["Components"]},{"location":"Components/Divider/#usage","title":"Usage","text":"<p>Divider can be created by calling <code>Lydie.Components.Divider</code>:</p> <pre><code>Lydie.Components.Divider {\n    ZIndex = 2,\n\n    AnchorPoint = Vector2.new(0, 1),\n    Position = UDim2.fromScale(0, 1),\n},\n</code></pre>","tags":["Components"]},{"location":"Components/Divider/#properties","title":"Properties","text":"Name Description Required Default <code>Size</code> The size of the divider <code>UDim2.new(1, 0, 0, 1)</code> <code>ZIndex</code> The Z index of the divider <code>1</code> <code>AnchorPoint</code> The anchor point of the divider <code>Vector2.new(0, 0)</code> <code>Position</code> The relative position of the divider <code>UDim2.new(0, 0, 0, 0)</code>","tags":["Components"]},{"location":"Components/Shadow/","title":"Shadow","text":"<p>Note</p> <p>This component uses code from AmaranthineCodices's Shadow component in MIT-licensed roact-material, see Shadow.lua.</p> <p>Shadow is a stack of three shadow images of different properties to emulate the physical properties of shadow in real life. This is often used to show the hierarchy of an object in visual ways.</p>","tags":["Components"]},{"location":"Components/Shadow/#usage","title":"Usage","text":"<p>Shadow can be created by calling <code>Lydie.Components.Shadow</code>:</p> <pre><code>Lydie.Components.Shadow {\n    Elevation = Value(Constants.Elevation[4]),\n    ZIndex = 0,\n    Size = UDim2.fromScale(1, 1),\n},\n</code></pre>","tags":["Components"]},{"location":"Components/Shadow/#properties","title":"Properties","text":"Name Description Required Default <code>Size</code> The size of the shadow <code>UDim2.fromScale(1, 1)</code> <code>ZIndex</code> The Z index of the shadow <code>1</code> <code>Elevation</code> The elevation index of the shadow. You should use <code>Constants.Elevation</code> enums. <code>NaN</code>","tags":["Components"]},{"location":"Components/Controls/Checkbox/","title":"Checkbox","text":"<p>Warning</p> <p>While the usage of checkbox and toggle may seem familiar, they are not. Checkboxes are often used when the user can select one or more items from a list, whereas toggles are used to set the state of an item, like whether to mute audio or not for instance.</p> <p>Checkbox is used to select one or multiple items from a list.</p>","tags":["Controls","Components"]},{"location":"Components/Controls/Checkbox/#usage","title":"Usage","text":"<p>Checkbox can be created by calling <code>Lydie.Components.Controls.Checkbox</code>:</p> <pre><code>Lydie.Components.Controls.Checkbox {\n    OnClick = function(state) -- (1)!\n        state:set(not state:get())\n        print(\"Checkbox Clicked\", state:get())\n    end,\n},\n</code></pre> <ol> <li>When passing an <code>OnClick</code> function to the toggle, it is important to know that the default behavior of the toggle will be overridden. The toggle state will not react to the user response automatically and requires manual intervention. See Checkbox.luau:58.</li> </ol>","tags":["Controls","Components"]},{"location":"Components/Controls/Checkbox/#properties","title":"Properties","text":"Name Description Required Default <code>ZIndex</code> The Z index of the button, used to show hierarchy of the button. <code>1</code> <code>Position</code> The relative position of the button <code>UDim2.fromOffset(0, 0)</code>","tags":["Controls","Components"]},{"location":"Components/Controls/Checkbox/#functions","title":"Functions","text":"Name Description Required <code>OnClick: (state: Fusion.Value&lt;boolean&gt;) -&gt; ()</code> A function invoked when <code>MouseButton1Up</code> is fired, where a user clicks the button and releases","tags":["Controls","Components"]},{"location":"Components/Controls/Slider/","title":"Slider","text":"<p>Slider is used to let users make selection from a range of values</p>","tags":["Controls","Components"]},{"location":"Components/Controls/Slider/#usage","title":"Usage","text":"<p>Slider can be created by calling <code>Lydie.Components.Controls.Slider</code>:</p> <pre><code>local sliderValue = Fusion.Value(0)\n\nLydie.Components.Controls.Slider {\n    Value = sliderValue, -- (1)!\n    Stepper = 10,\n},\n\nFusion.Observer(sliderValue):onChange(function()\n    print(\"Slider value changed to \", sliderValue:get())\nend\n</code></pre> <ol> <li>Slider does not provide a function that will be invoked on slider value change, you can manually attach a <code>Fusion.Value</code> into the properties table as <code>[\"Value\"]</code>, and observe the changes using <code>Fusion.Observer</code>.</li> </ol>","tags":["Controls","Components"]},{"location":"Components/Controls/Slider/#properties","title":"Properties","text":"Name Description Required Default <code>Value</code> The value user is selecting in the slider <code>Fusion.Value(0)</code> <code>Stepper</code> The stepper portions of the slider. If set to <code>0</code>, the slider will become indiscrete. <code>Fusion.Value(5)</code> <code>Position</code> The relative position of the slider <code>UDim2.fromOffset(0, 0)</code> <code>Width</code> The width of the slider <code>200</code>","tags":["Controls","Components"]},{"location":"Components/Controls/TextField/","title":"TextField","text":"<p>TextField is an extension of the existing <code>TextBox</code> class from Roblox. TextField provides more expressive styling and accessibility features, such as proper cursor support.</p>","tags":["Controls","Components"]},{"location":"Components/Controls/TextField/#usage","title":"Usage","text":"<p>TextField can be created by calling <code>Lydie.Components.Controls.TextField</code>:</p> <pre><code>Lydie.Components.Controls.TextField {\n    PlaceholderText = \"Type me!\"\n\n    OnTextChanged = function(text)\n        print(\"Changed to: \" .. text)\n    end,\n}\n</code></pre>","tags":["Controls","Components"]},{"location":"Components/Controls/TextField/#properties","title":"Properties","text":"Name Description Required Default <code>ForegroundColor</code> Foreground color of the TextField, used to color the outline when active <code>Scheme.Accent</code> <code>Text</code> The text string of the TextField. <code>\"\"</code> <code>PlaceholderText</code> The placeholder text string of the TextField. <code>\"Click to type</code> <code>LayoutOrder</code> The layout order of the button, used in a <code>UIListLayout</code>/<code>UIGridLayout</code> <code>1</code> <code>ZIndex</code> The Z index of the button, used to show hierarchy of the button. <code>1</code> <code>Position</code> The relative position of the button <code>UDim2.fromScale(0, 0)</code> <code>Size</code> The size of the button <code>UDim2.fromOffset(200, 42)</code>","tags":["Controls","Components"]},{"location":"Components/Controls/TextField/#functions","title":"Functions","text":"Name Description Required <code>OnClick: () -&gt; ()</code> A function invoked when <code>MouseButton1Up</code> is fired, where a user clicks the button and releases <code>OnTextChanged: (text: string) -&gt; ()</code> A function invoked when <code>Text</code> is changed","tags":["Controls","Components"]},{"location":"Components/Controls/Toggle/","title":"Toggle","text":"<p>Toggle is used to toggle the selection of an item on or off. They are best used to let users adjust settings.</p>","tags":["Controls","Components"]},{"location":"Components/Controls/Toggle/#usage","title":"Usage","text":"<p>Toggle can be created by calling <code>Lydie.Components.Controls.Toggle</code>:</p> <pre><code>Lydie.Components.Controls.Toggle {\n    OnClick = function(state) -- (1)!\n        state:set(not state:get())\n        print(\"Toggle Clicked\", state:get())\n    end,\n},\n</code></pre> <ol> <li>When passing an <code>OnClick</code> function to the toggle, it is important to know that the default behavior of the toggle will be overridden. The toggle state will not react to the user response automatically and requires manual intervention. See Toggle.luau:80.</li> </ol>","tags":["Controls","Components"]},{"location":"Components/Controls/Toggle/#properties","title":"Properties","text":"Name Description Required Default <code>ZIndex</code> The Z index of the button, used to show hierarchy of the button. <code>1</code> <code>Position</code> The relative position of the button <code>UDim2.fromOffset(0, 0)</code>","tags":["Controls","Components"]},{"location":"Components/Controls/Toggle/#functions","title":"Functions","text":"Name Description Required <code>OnClick: (state: Fusion.Value&lt;boolean&gt;) -&gt; ()</code> A function invoked when <code>MouseButton1Up</code> is fired, where a user clicks the button and releases","tags":["Controls","Components"]},{"location":"Components/Controls/Buttons/AppBarButton/","title":"AppBarButton","text":"<p>AppBarButton is a class inherited from IconButton, compared to its ancestor, AppBarButton is an infographic-only button with proper styling to fit in the TopAppBar or BottomAppBar component.</p>","tags":["Controls","Components","Buttons","Window"]},{"location":"Components/Controls/Buttons/AppBarButton/#usage","title":"Usage","text":"<p>AppBarButton can be created by calling <code>Lydie.Components.Controls.AppBarButton</code>:</p> <pre><code>local iconState = Fusion.Value(Icons.album)\n\nLydie.Components.Controls.AppBarButton {\n    Icon = iconState, -- (1)!\n\n    OnClick = function() -- (2)!\n        print(\"Hello, world!\")\n    end,\n}\n</code></pre> <ol> <li> <p><code>Icon</code> property accepts both a string of a state-wrapped string. The string should be either the asset URL or the ID of the image. Lydie has provided a list of icons from Lucide Icons for basic usage. Spritesheet-based icons are not supported at the moment.</p> </li> <li> <p><code>OnClick</code> function will be invoked when <code>InputEnded</code> is fired and its input type matches either <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>. Due to how input events work in Roblox, input will sink no matter what. You should ensure the user is clicking the button before doing any further processing. See BaseButton.luau:69.</p> </li> </ol>","tags":["Controls","Components","Buttons","Window"]},{"location":"Components/Controls/Buttons/AppBarButton/#properties","title":"Properties","text":"Name Description Required Default <code>Icon</code> The asset URL/ID of the icon. <code>Icons[\"loader-2\"]</code> <code>LayoutOrder</code> The layout order of the button, used in a <code>UIListLayout</code>/<code>UIGridLayout</code> <code>NaN</code>","tags":["Controls","Components","Buttons","Window"]},{"location":"Components/Controls/Buttons/AppBarButton/#functions","title":"Functions","text":"Name Description Required <code>OnClick: () -&gt; ()</code> A function invoked when <code>InputEnded</code> is fired with matching input types <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>, where a user clicks the button and releases","tags":["Controls","Components","Buttons","Window"]},{"location":"Components/Controls/Buttons/AppTabBarButton/","title":"AppTabBarButton","text":"<p>AppTabBarButton is a class inherited from IconButton, compared to its ancestor, AppTabBarButton is an infographic-only button with proper styling to fit in the AppTabBar component.</p>","tags":["Controls","Components","Buttons","Tabs","Window"]},{"location":"Components/Controls/Buttons/AppTabBarButton/#usage","title":"Usage","text":"<p>AppTabBarButton can be created by calling <code>Lydie.Components.Controls.AppTabBarButton</code>:</p> <pre><code>local iconState = Fusion.Value(Icons.album)\nlocal toggleState = Fusion.Value(false)\n\nLydie.Components.Controls.AppTabBarButton {\n    State = toggleState\n    Icon = iconState, -- (1)!\n\n    OnClick = function(state) -- (2)!\n        state:set(true)\n    end,\n}\n</code></pre> <ol> <li> <p><code>Icon</code> property accepts both a string of a state-wrapped string. The string should be either the asset URL or the ID of the image. Lydie has provided a list of icons from Lucide Icons for basic usage. Spritesheet-based icons are not supported at the moment.</p> </li> <li> <p><code>OnClick</code> function will be invoked when <code>InputEnded</code> is fired and its input type matches either <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>. Due to how input events work in Roblox, input will sink no matter what. You should ensure the user is clicking the button before doing any further processing. See BaseButton.luau:69.</p> </li> </ol>","tags":["Controls","Components","Buttons","Tabs","Window"]},{"location":"Components/Controls/Buttons/AppTabBarButton/#properties","title":"Properties","text":"Name Description Required Default <code>Icon</code> The asset URL/ID of the icon. <code>Icons[\"loader-2\"]</code> <code>State</code> The toggle state of the button, used to indicate whether this tab is active or not <code>Fusion.Value(false)</code> <code>LayoutOrder</code> The layout order of the button, used in a <code>UIListLayout</code>/<code>UIGridLayout</code> <code>NaN</code>","tags":["Controls","Components","Buttons","Tabs","Window"]},{"location":"Components/Controls/Buttons/AppTabBarButton/#functions","title":"Functions","text":"Name Description Required <code>OnClick: (Fusion.Value&lt;boolean&gt;) -&gt; ()</code> A function invoked when <code>InputEnded</code> is fired with matching input types <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>, where a user clicks the button and releases","tags":["Controls","Components","Buttons","Tabs","Window"]},{"location":"Components/Controls/Buttons/BaseButton/","title":"BaseButton","text":"<p>BaseButton is a button class that provides the base style and functionality of a button. When compared to other button classes, BaseButton does not introduce the ability to add text or anything, this will be sourced by the user using the component. If you are looking for implementation of buttons with text/infographic included, see TextButton, IconButton, or IconTextButton.</p>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/BaseButton/#usage","title":"Usage","text":"<p>BaseButton can be created by calling <code>Lydie.Components.Controls.BaseButton</code>:</p> <pre><code>local textState = Fusion.Value(\"Hello world!\")\n\nLydie.Components.Controls.BaseButton {\n    Size = UDim2.fromOffset(200, 40),\n\n    [Children] = { -- (1)!\n        New \"TextLabel\" {\n            Text = textState,\n        },\n    },\n\n    OnClickDown = function(),\n        textState:set(\"Hello world??\")\n    end,\n\n    OnClick = function() -- (2)!\n        textState:set(\"Hello world!\")\n    end,\n}\n</code></pre> <ol> <li>You can pass children using the <code>[Fusion.Children]</code> key, all children will be stored under the BaseButton object. See BaseButton.luau:51.</li> <li><code>OnClick</code> function will be invoked when <code>InputEnded</code> is fired and its input type matches either <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>. Due to how input events work in Roblox, input will sink no matter what. You should ensure the user is clicking the button before doing any further processing. See BaseButton.luau:69.</li> </ol>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/BaseButton/#properties","title":"Properties","text":"Name Description Required Default <code>BackgroundColor</code> Background color of the button <code>Scheme.GetAnimated(Scheme.Color.Text.Primary)</code> <code>BackgroundOpacity</code> Background opacity of the button <code>0.85</code> <code>RoundedValue</code> The radius of the 4 corners <code>Constants.RoundedValues[8]</code> <code>LayoutOrder</code> The layout order of the button, used in a <code>UIListLayout</code>/<code>UIGridLayout</code> <code>0</code> <code>ZIndex</code> The Z index of the button, used to show hierarchy of the button. <code>NaN</code> <code>AnchorPoint</code> The location of the anchor point, defined in <code>Vector2</code> <code>Vector2.new(0, 0)</code> <code>Position</code> The relative position of the button <code>UDim2.fromScale(0, 0)</code> <code>Size</code> The size of the button <code>UDim2.fromOffset(200, 50)</code> <code>[Fusion.Children]</code> The children of the button, this is used to insert other objects into the button itself <code>nil</code>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/BaseButton/#functions","title":"Functions","text":"Name Description Required <code>OnClickDown: () -&gt; ()</code> A function invoked when <code>MouseButton1Down</code> is fired, where a user clicks the button and does not release <code>OnClick: () -&gt; ()</code> A function invoked when <code>InputEnded</code> is fired with matching input types <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>, where a user clicks the button and releases","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/IconButton/","title":"IconButton","text":"<p>IconButton is a class inherited from BaseButton, compared to its ancestor, IconButton provides basic infographic support on top of a button.</p>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/IconButton/#usage","title":"Usage","text":"<p>IconButton can be created by calling <code>Lydie.Components.Controls.IconButton</code>:</p> <pre><code>local iconState = Fusion.Value(Icons.album)\n\nLydie.Components.Controls.IconButton {\n    Size = UDim2.fromOffset(200, 40),\n    Icon = iconState, -- (1)!\n\n    OnClickDown = function(),\n        iconState:set(Icons.archive)\n    end,\n\n    OnClick = function() -- (2)!\n        iconState:set(Icons.album)\n    end,\n}\n</code></pre> <ol> <li> <p><code>Icon</code> property accepts both a string of a state-wrapped string. The string should be either the asset URL or the ID of the image. Lydie has provided a list of icons from Lucide Icons for basic usage. Spritesheet-based icons are not supported at the moment.</p> </li> <li> <p><code>OnClick</code> function will be invoked when <code>InputEnded</code> is fired and its input type matches either <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>. Due to how input events work in Roblox, input will sink no matter what. You should ensure the user is clicking the button before doing any further processing. See BaseButton.luau:69.</p> </li> </ol>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/IconButton/#properties","title":"Properties","text":"<p>Note</p> <p>While being inherited from BaseButton, TextButton does not allow using the <code>Fusion.Children</code> to insert children as it will be used to insert the icon instead.</p> Name Description Required Default <code>BackgroundColor</code> Background color of the button <code>Scheme.GetAnimated(Scheme.Color.Text.Primary)</code> <code>BackgroundOpacity</code> Background opacity of the button <code>0.85</code> <code>ForegroundColor</code> Foreground color of the button, used to color the icon <code>BackgroundColor</code> or <code>Scheme.GetAnimated(Scheme.Color.Text.Primary)</code> <code>Icon</code> The asset URL/ID of the icon. <code>nil</code> <code>RoundedValue</code> The radius of the 4 corners <code>Constants.RoundedValues[8]</code> <code>LayoutOrder</code> The layout order of the button, used in a <code>UIListLayout</code>/<code>UIGridLayout</code> <code>0</code> <code>ZIndex</code> The Z index of the button, used to show hierarchy of the button. <code>NaN</code> <code>AnchorPoint</code> The location of the anchor point, defined in <code>Vector2</code> <code>Vector2.new(0, 0)</code> <code>Position</code> The relative position of the button <code>UDim2.fromScale(0, 0)</code> <code>Size</code> The size of the button <code>UDim2.fromOffset(200, 50)</code>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/IconButton/#functions","title":"Functions","text":"Name Description Required <code>OnClickDown: () -&gt; ()</code> A function invoked when <code>MouseButton1Down</code> is fired, where a user clicks the button and does not release <code>OnClick: () -&gt; ()</code> A function invoked when <code>InputEnded</code> is fired with matching input types <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>, where a user clicks the button and releases","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/IconTextButton/","title":"IconTextButton","text":"<p>IconTextButton is a class inherited from BaseButton, compared to its ancestor, IconTextButton provides both infographic and text support on top of a button.</p>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/IconTextButton/#usage","title":"Usage","text":"<p>IconTextButton can be created by calling <code>Lydie.Components.Controls.IconTextButton</code>:</p> <pre><code>local textState = Fusion.Value(\"Hello world!\")\n\nLydie.Components.Controls.IconTextButton {\n    Size = UDim2.fromOffset(200, 40),\n    Text = textState,\n    Icon = Icons.album, -- (1)!\n\n    OnClickDown = function(),\n        textState:set(\"Hello world??\")\n    end,\n\n    OnClick = function() -- (2)!\n        textState:set(\"Hello world!\")\n    end,\n}\n</code></pre> <ol> <li> <p><code>Icon</code> property accepts both a string of a state-wrapped string. The string should be either the asset URL or the ID of the image. Lydie has provided a list of icons from Lucide Icons for basic usage. Spritesheet-based icons are not supported at the moment.</p> </li> <li> <p><code>OnClick</code> function will be invoked when <code>InputEnded</code> is fired and its input type matches either <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>. Due to how input events work in Roblox, input will sink no matter what. You should ensure the user is clicking the button before doing any further processing. See BaseButton.luau:69.</p> </li> </ol>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/IconTextButton/#properties","title":"Properties","text":"<p>Note</p> <p>While being inherited from BaseButton, TextButton does not allow using the <code>Fusion.Children</code> to insert children as it will be used to insert the text label and the icon instead.</p> Name Description Required Default <code>BackgroundColor</code> Background color of the button <code>Scheme.GetAnimated(Scheme.Color.Text.Primary)</code> <code>BackgroundOpacity</code> Background opacity of the button <code>0.85</code> <code>ForegroundColor</code> Foreground color of the button, used to color the text and icon <code>BackgroundColor</code> or <code>Scheme.GetAnimated(Scheme.Color.Text.Primary)</code> <code>Icon</code> The asset URL/ID of the icon. <code>nil</code> <code>Text</code> The text string of the button. <code>nil</code> <code>RoundedValue</code> The radius of the 4 corners <code>Constants.RoundedValues[8]</code> <code>LayoutOrder</code> The layout order of the button, used in a <code>UIListLayout</code>/<code>UIGridLayout</code> <code>0</code> <code>ZIndex</code> The Z index of the button, used to show hierarchy of the button. <code>NaN</code> <code>AnchorPoint</code> The location of the anchor point, defined in <code>Vector2</code> <code>Vector2.new(0, 0)</code> <code>Position</code> The relative position of the button <code>UDim2.fromScale(0, 0)</code> <code>Size</code> The size of the button <code>UDim2.fromOffset(200, 50)</code>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/IconTextButton/#functions","title":"Functions","text":"Name Description Required <code>OnClickDown: () -&gt; ()</code> A function invoked when <code>MouseButton1Down</code> is fired, where a user clicks the button and does not release <code>OnClick: () -&gt; ()</code> A function invoked when <code>InputEnded</code> is fired with matching input types <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>, where a user clicks the button and releases","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/TextButton/","title":"TextButton","text":"<p>TextButton is a class inherited from BaseButton, compared to its ancestor, TextButton provides basic text support on top of a button. You can add text to the button either by using <code>string</code> or <code>Fusion.Value</code>.</p>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/TextButton/#usage","title":"Usage","text":"<p>TextButton can be created by calling <code>Lydie.Components.Controls.TextButton</code>:</p> <pre><code>local textState = Fusion.Value(\"Hello world!\")\n\nLydie.Components.Controls.TextButton {\n    Size = UDim2.fromOffset(200, 40),\n    Text = textState,\n\n    OnClickDown = function(),\n        textState:set(\"Hello world??\")\n    end,\n\n    OnClick = function() -- (1)!\n        textState:set(\"Hello world!\")\n    end,\n}\n</code></pre> <ol> <li><code>OnClick</code> function will be invoked when <code>InputEnded</code> is fired and its input type matches either <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>. Due to how input events work in Roblox, input will sink no matter what. You should ensure the user is clicking the button before doing any further processing. See BaseButton.luau:69.</li> </ol>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/TextButton/#properties","title":"Properties","text":"<p>Note</p> <p>While being inherited from BaseButton, TextButton does not allow using the <code>Fusion.Children</code> to insert children as it will be used to insert the text label instead.</p> Name Description Required Default <code>BackgroundColor</code> Background color of the button <code>Scheme.GetAnimated(Scheme.Color.Text.Primary)</code> <code>BackgroundOpacity</code> Background opacity of the button <code>0.85</code> <code>ForegroundColor</code> Foreground color of the button, used to color the text <code>BackgroundColor</code> or <code>Scheme.GetAnimated(Scheme.Color.Text.Primary)</code> <code>Text</code> The text string of the button. <code>nil</code> <code>RoundedValue</code> The radius of the 4 corners <code>Constants.RoundedValues[8]</code> <code>LayoutOrder</code> The layout order of the button, used in a <code>UIListLayout</code>/<code>UIGridLayout</code> <code>0</code> <code>ZIndex</code> The Z index of the button, used to show hierarchy of the button. <code>NaN</code> <code>AnchorPoint</code> The location of the anchor point, defined in <code>Vector2</code> <code>Vector2.new(0, 0)</code> <code>Position</code> The relative position of the button <code>UDim2.fromScale(0, 0)</code> <code>Size</code> The size of the button <code>UDim2.fromOffset(200, 50)</code>","tags":["Controls","Components","Buttons"]},{"location":"Components/Controls/Buttons/TextButton/#functions","title":"Functions","text":"Name Description Required <code>OnClickDown: () -&gt; ()</code> A function invoked when <code>MouseButton1Down</code> is fired, where a user clicks the button and does not release <code>OnClick: () -&gt; ()</code> A function invoked when <code>InputEnded</code> is fired with matching input types <code>Enum.UserInputType.MouseButton1</code> or <code>Enum.UserInputType.Touch</code>, where a user clicks the button and releases","tags":["Controls","Components","Buttons"]},{"location":"Components/View/AppTabBar/","title":"AppTabBar","text":"<p>AppTabBar is used to add tab support to your window, this could be used to let users navigate between different pages intuitively. Used together with AppTabBarButton and BottomAppBar.</p>","tags":["View","Components","Window","Tabs"]},{"location":"Components/View/AppTabBar/#usage","title":"Usage","text":"<p>AppTabBar can be created by calling <code>Lydie.Components.View.AppTabBar</code>:</p> <pre><code>local tabStates = {\n    Home = Fusion.Value(true),\n    Settings = Fusion.Value(false),\n    About = Fusion.Value(false),\n}\n\nlocal function tabOnClick(state)\n    state:set(true)\n    for _, tabState in pairs(tabStates) do\n        if tabState ~= state then\n            tabState:set(false)\n        end\n    end\nend\n\nLydie.Components.View.AppTabBar {\n    [Fusion.Children] = {\n        AppTabBarButton {\n            Icon = Icons.home,\n            State = tabStates.Home,\n            OnClick = tabOnClick,\n        },\n\n        AppTabBarButton {\n            Icon = Icons.sliders,\n            State = tabStates.Settings,\n            OnClick = tabOnClick,\n        },\n\n        AppTabBarButton {\n            Icon = Icons.info,\n            State = tabStates.About,\n            OnClick = tabOnClick,\n        },\n    },\n},\n</code></pre>","tags":["View","Components","Window","Tabs"]},{"location":"Components/View/AppTabBar/#properties","title":"Properties","text":"Name Description Required Default <code>ZIndex</code> The Z index of the button, used to show hierarchy of the button. <code>1</code> <code>[Fusion.Children]</code> The children of the tab bar, this is used to insert AppTabBarButton into the list <code>nil</code>","tags":["View","Components","Window","Tabs"]},{"location":"Components/View/BottomAppBar/","title":"BottomAppBar","text":"<p>BottomAppBar is the app bar shown at the bottom part of the window. Used together with AppBarButton or AppTabBar.</p>","tags":["View","Components","Window"]},{"location":"Components/View/BottomAppBar/#usage","title":"Usage","text":"<p>BottomAppBar can be created by calling <code>Lydie.Components.View.BottomAppBar</code>:</p> <pre><code>Lydie.Components.View.BottomAppBar {\n    ZIndex = 2,\n\n    [Fusion.Children] = {\n        Lydie.Components.View.AppTabBar { ... }\n    },\n}\n</code></pre>","tags":["View","Components","Window"]},{"location":"Components/View/BottomAppBar/#properties","title":"Properties","text":"Name Description Required Default <code>ZIndex</code> The Z index of the button, used to show hierarchy of the button. <code>1</code> <code>[Fusion.Children]</code> The children of the bottom bar, this is often used to insert AppTabBar into the list <code>nil</code>","tags":["View","Components","Window"]},{"location":"Components/View/ToolTip/","title":"ToolTip","text":"<p>ToolTip is used to show additional but not essentially important information about an object. This is currently used in Slider.</p>","tags":["View","Components"]},{"location":"Components/View/ToolTip/#usage","title":"Usage","text":"<p>ToolTip can be created by calling <code>Lydie.Components.View.ToolTip</code>:</p> <pre><code>Lydie.Components.View.ToolTip {\n    Text = \"Hello, world!\",\n    Visible = true,\n},\n</code></pre>","tags":["View","Components"]},{"location":"Components/View/ToolTip/#properties","title":"Properties","text":"Name Description Required Default <code>Text</code> The text string of the tooltip <code>nil</code> <code>AnchorPoint</code> The anchor point of the tooltip <code>Vector2.new(0.5, 1)</code> <code>Position</code> The relative position of the tooltip <code>UDim2.new(0.5, 0, 0, -6)</code> <code>Visible</code> The visibility of the tooltip <code>true</code> <code>[Fusion.Children]</code> The children of the window container <code>nil</code>","tags":["View","Components"]},{"location":"Components/View/TopAppBar/","title":"TopAppBar","text":"<p>TopAppBar is the app bar shown at the top part of the window. Used together with AppBarButton. This is usually required.</p>","tags":["View","Components","Window"]},{"location":"Components/View/TopAppBar/#usage","title":"Usage","text":"<p>TopAppBar can be created by calling <code>Lydie.Components.View.TopAppBar</code>:</p> <pre><code>local windowVisible = Fusion.Value(true)\n\nLydie.Components.View.TopAppBar {\n    Icon = Icons.info,\n    Subtitle = Fusion.Value(\"Subtitle\"),\n    Title = Fusion.Value(\"Top App Bar\"),\n    ZIndex = 2,\n\n    [Fusion.Children] = {\n        Fusion.New \"UIPadding\" {\n            PaddingRight = UDim.new(0, 5),\n        },\n\n        Lydie.Components.Controls.AppBarButton {\n            Icon = Icons[\"x-circle\"],\n            LayoutOrder = 2,\n\n            OnClick = function()\n                windowVisible:set(false)\n            end,\n        },\n    }\n}\n</code></pre>","tags":["View","Components","Window"]},{"location":"Components/View/TopAppBar/#properties","title":"Properties","text":"Name Description Required Default <code>ZIndex</code> The Z index of the button, used to show hierarchy of the button. <code>1</code> <code>[Fusion.Children]</code> The children of the top bar, this is often used to insert AppBarButton into the list <code>nil</code>","tags":["View","Components","Window"]},{"location":"Components/View/Window/","title":"Window","text":"<p>Window is the main container to display the content of a UI. This is often used together with TopAppBar and BottomAppBar.</p> <p>Note</p> <p>Window has already set <code>AnchorPoint</code> to <code>Vector2.new(0.5, 0.5)</code>.</p>","tags":["View","Components","Window"]},{"location":"Components/View/Window/#usage","title":"Usage","text":"<p>Window can be created by calling <code>Lydie.Components.View.Window</code>:</p> <pre><code>Lydie.Components.View.Window {\n    [Fusion.Children] = {\n        Lydie.Components.View.TopAppBar { ... },\n\n        Fusion.New \"Frame\" {\n            BackgroundTransparency = 1,\n\n            Position = UDim2.fromOffset(0, 50),\n            Size = UDim2.new(1, 0, 1, -100),\n\n            [Fusion.Children] = { ... }\n        }\n\n        Lydie.Components.View.BottomAppBar { ... },\n    }\n}\n</code></pre>","tags":["View","Components","Window"]},{"location":"Components/View/Window/#properties","title":"Properties","text":"Name Description Required Default <code>ZIndex</code> The Z index of the window, used to show hierarchy. <code>1</code> <code>Position</code> The relative position of the window <code>UDim2.fromScale(0.5, 0.5)</code> <code>Size</code> The size of the window <code>UDim2.fromOffset(700, 700)</code> <code>Visible</code> The visibility of the window <code>true</code> <code>[Fusion.Children]</code> The children of the window container <code>nil</code>","tags":["View","Components","Window"]},{"location":"Modules/Constants/","title":"Constants","text":"<p>Constants is a table of data that is not meant to be changed during runtime. In Lydie, they are used to store the appearance values of different components, like Shadow.</p> Constants.luau<pre><code>local EnumList = require(script.Parent.EnumList)\n\nlocal rect256 = Rect.new(Vector2.new(256, 256), Vector2.new(256, 256))\n\nreturn {\n    BottomRounded = EnumList.new(\"BottomRounded\", { -- (1)!\n        Center = rect256,\n        Id = \"rbxassetid://8858987793\",\n    }),\n\n    Rounded = EnumList.new(\"Rounded\", { -- (2)!\n        Center = rect256,\n        Id = \"rbxassetid://8858983293\",\n    }),\n\n    TopRounded = EnumList.new(\"TopRounded\", { -- (3)!\n        Center = rect256,\n        Id = \"rbxassetid://8858987141\",\n    }),\n\n    RoundedValues = EnumList.new(\"RoundedValues\", { -- (4)!\n        [8] = 0.03,\n        [7] = 0.025,\n        [6] = 0.02,\n    }),\n\n    Elevation = EnumList.new(\"Elevation\", { -- (5)!\n        [0] = 0,\n        [1] = 1,\n        [2] = 2,\n        [3] = 3,\n        [4] = 4,\n        [6] = 6,\n        [8] = 8,\n        [9] = 9,\n        [12] = 12,\n        [16] = 16,\n    }),\n\n    ShadowImage = \"rbxassetid://1316045217\", -- (6)!\n}\n</code></pre> <ol> <li>This is the image for objects that only wanted the bottom corners to be rounded, this is used in BottomAppBar</li> <li>This is the image for objects that only wanted the all corners to be rounded, this is used in many components, such as BaseButton</li> <li>This is the image for objects that only wanted the top corners to be rounded, this is used in TopAppBar</li> <li>This is the list of rounded values in Lydie, we only use from <code>8px</code> to <code>6px</code>. The rounded values in the list are the <code>SliceScale</code> values for <code>TopRounded</code>, <code>Rounded</code>, and <code>BottomRounded</code> images.</li> <li>This is the list of elevation values in Lydie. They are used in defining shadow sizes. See Shadow.</li> <li>This is the image of the Shadow component.</li> </ol>","tags":["Modules"]},{"location":"Modules/EnumList/","title":"EnumList","text":"<p>EnumList is a module created by bubshayz, used to create enumeration lists. This currently used to create enum constants in Constants.</p>","tags":["Modules"]},{"location":"Modules/Icons/","title":"Icons","text":"<p>Icons is a list of Lucide Icons to be used with components in Lydie. Note that this list is using a rather old version of Lucide Icons, the new-added icons can not be found in this list. If you need those icons or custom icons, feel free to export one by yourself and use it manually.</p> <p>In Lydie, icons are exported in <code>256x256@2x</code> with alpha bleeding applied. Resulting in clear and sharp outlines.</p> Icons.luau<pre><code>-- This file was @generated by Tarmac. It is not intended for manual editing.\nreturn {\n    icons = {\n        CD = \"rbxassetid://7734110220\",\n        activity = \"rbxassetid://7733655755\",\n        airplay = \"rbxassetid://7733655834\",\n        [\"alarm-check\"] = \"rbxassetid://7733655912\",\n        [\"alarm-clock\"] = \"rbxassetid://7733656100\",\n        [\"alarm-clock-off\"] = \"rbxassetid://7733656003\",\n        [\"alarm-minus\"] = \"rbxassetid://7733656164\",\n        [\"alarm-plus\"] = \"rbxassetid://7733658066\",\n        album = \"rbxassetid://7733658133\",\n        [\"alert-circle\"] = \"rbxassetid://7733658271\",\n        [\"alert-octagon\"] = \"rbxassetid://7733658335\",\n        [\"alert-triangle\"] = \"rbxassetid://7733658504\",\n        [\"align-center\"] = \"rbxassetid://7733909776\",\n        [\"align-justify\"] = \"rbxassetid://7733661326\",\n        [\"align-left\"] = \"rbxassetid://7733911357\",\n        [\"align-right\"] = \"rbxassetid://7733663582\",\n        anchor = \"rbxassetid://7733911490\",\n        aperture = \"rbxassetid://7733666258\",\n        archive = \"rbxassetid://7733911621\",\n        [\"arrow-big-down\"] = \"rbxassetid://7733668653\",\n        [\"arrow-big-left\"] = \"rbxassetid://7733911731\",\n        [\"arrow-big-right\"] = \"rbxassetid://7733671493\",\n        [\"arrow-big-up\"] = \"rbxassetid://7733671663\",\n        [\"arrow-down\"] = \"rbxassetid://7733672933\",\n        [\"arrow-down-circle\"] = \"rbxassetid://7733671763\",\n        [\"arrow-down-left\"] = \"rbxassetid://7733672282\",\n        [\"arrow-down-right\"] = \"rbxassetid://7733672831\",\n        [\"arrow-left\"] = \"rbxassetid://7733673136\",\n        [\"arrow-left-circle\"] = \"rbxassetid://7733673056\",\n        [\"arrow-right\"] = \"rbxassetid://7733673345\",\n        [\"arrow-right-circle\"] = \"rbxassetid://7733673229\",\n        [\"arrow-up\"] = \"rbxassetid://7733673717\",\n        [\"arrow-up-circle\"] = \"rbxassetid://7733673466\",\n        [\"arrow-up-left\"] = \"rbxassetid://7733673539\",\n        [\"arrow-up-right\"] = \"rbxassetid://7733673646\",\n        asterisk = \"rbxassetid://7733673800\",\n        [\"at-sign\"] = \"rbxassetid://7733673907\",\n        award = \"rbxassetid://7733673987\",\n        axe = \"rbxassetid://7733674079\",\n        banknote = \"rbxassetid://7733674153\",\n        [\"bar-chart\"] = \"rbxassetid://7733674319\",\n        [\"bar-chart-2\"] = \"rbxassetid://7733674239\",\n        battery = \"rbxassetid://7733674820\",\n        [\"battery-charging\"] = \"rbxassetid://7733674402\",\n        [\"battery-full\"] = \"rbxassetid://7733674503\",\n        [\"battery-low\"] = \"rbxassetid://7733674589\",\n        [\"battery-medium\"] = \"rbxassetid://7733674731\",\n        beaker = \"rbxassetid://7733674922\",\n        bell = \"rbxassetid://7733911828\",\n        [\"bell-minus\"] = \"rbxassetid://7733675028\",\n        [\"bell-off\"] = \"rbxassetid://7733675107\",\n        [\"bell-plus\"] = \"rbxassetid://7733675181\",\n        [\"bell-ring\"] = \"rbxassetid://7733675275\",\n        bike = \"rbxassetid://7733678330\",\n        binary = \"rbxassetid://7733678388\",\n        bluetooth = \"rbxassetid://7733687147\",\n        [\"bluetooth-connected\"] = \"rbxassetid://7734110952\",\n        [\"bluetooth-off\"] = \"rbxassetid://7733914252\",\n        [\"bluetooth-searching\"] = \"rbxassetid://7733914320\",\n        bold = \"rbxassetid://7733687211\",\n        book = \"rbxassetid://7733914390\",\n        [\"book-open\"] = \"rbxassetid://7733687281\",\n        bookmark = \"rbxassetid://7733692043\",\n        [\"bookmark-minus\"] = \"rbxassetid://7733689754\",\n        [\"bookmark-plus\"] = \"rbxassetid://7734111084\",\n        bot = \"rbxassetid://7733916988\",\n        box = \"rbxassetid://7733917120\",\n        [\"box-select\"] = \"rbxassetid://7733696665\",\n        briefcase = \"rbxassetid://7733919017\",\n        brush = \"rbxassetid://7733701455\",\n        bug = \"rbxassetid://7733701545\",\n        building = \"rbxassetid://7733701625\",\n        bus = \"rbxassetid://7733701715\",\n        calculator = \"rbxassetid://7733919105\",\n        calendar = \"rbxassetid://7733919198\",\n        camera = \"rbxassetid://7733708692\",\n        [\"camera-off\"] = \"rbxassetid://7733919260\",\n        car = \"rbxassetid://7733708835\",\n        cast = \"rbxassetid://7733919326\",\n        check = \"rbxassetid://7733715400\",\n        [\"check-circle\"] = \"rbxassetid://7733919427\",\n        [\"check-circle-2\"] = \"rbxassetid://7733710700\",\n        [\"check-square\"] = \"rbxassetid://7733919526\",\n        [\"chevron-down\"] = \"rbxassetid://7733717447\",\n        [\"chevron-left\"] = \"rbxassetid://7733717651\",\n        [\"chevron-right\"] = \"rbxassetid://7733717755\",\n        [\"chevron-up\"] = \"rbxassetid://7733919605\",\n        [\"chevrons-down\"] = \"rbxassetid://7733720604\",\n        [\"chevrons-down-up\"] = \"rbxassetid://7733720483\",\n        [\"chevrons-left\"] = \"rbxassetid://7733720701\",\n        [\"chevrons-right\"] = \"rbxassetid://7733919682\",\n        [\"chevrons-up\"] = \"rbxassetid://7733723433\",\n        [\"chevrons-up-down\"] = \"rbxassetid://7733723321\",\n        chrome = \"rbxassetid://7733919783\",\n        circle = \"rbxassetid://7733919881\",\n        clipboard = \"rbxassetid://7733734762\",\n        [\"clipboard-check\"] = \"rbxassetid://7733919947\",\n        [\"clipboard-copy\"] = \"rbxassetid://7733920037\",\n        [\"clipboard-list\"] = \"rbxassetid://7733920117\",\n        [\"clipboard-x\"] = \"rbxassetid://7733734668\",\n        clock = \"rbxassetid://7733734848\",\n        cloud = \"rbxassetid://7733746980\",\n        [\"cloud-drizzle\"] = \"rbxassetid://7733920226\",\n        [\"cloud-fog\"] = \"rbxassetid://7733920317\",\n        [\"cloud-hail\"] = \"rbxassetid://7733920444\",\n        [\"cloud-lightning\"] = \"rbxassetid://7733741741\",\n        [\"cloud-moon\"] = \"rbxassetid://7733920519\",\n        [\"cloud-off\"] = \"rbxassetid://7733745572\",\n        [\"cloud-rain\"] = \"rbxassetid://7733746651\",\n        [\"cloud-rain-wind\"] = \"rbxassetid://7733746456\",\n        [\"cloud-snow\"] = \"rbxassetid://7733746798\",\n        [\"cloud-sun\"] = \"rbxassetid://7733746880\",\n        cloudy = \"rbxassetid://7733747106\",\n        clover = \"rbxassetid://7733747233\",\n        code = \"rbxassetid://7733749837\",\n        [\"code-2\"] = \"rbxassetid://7733920644\",\n        codepen = \"rbxassetid://7733920768\",\n        codesandbox = \"rbxassetid://7733752575\",\n        coffee = \"rbxassetid://7733752630\",\n        coins = \"rbxassetid://7743866529\",\n        columns = \"rbxassetid://7733757178\",\n        command = \"rbxassetid://7733924046\",\n        compass = \"rbxassetid://7733924216\",\n        contact = \"rbxassetid://7743866666\",\n        contrast = \"rbxassetid://7733764005\",\n        copy = \"rbxassetid://7733764083\",\n        copyleft = \"rbxassetid://7733764196\",\n        copyright = \"rbxassetid://7733764275\",\n        [\"corner-down-left\"] = \"rbxassetid://7733764327\",\n        [\"corner-down-right\"] = \"rbxassetid://7733764385\",\n        [\"corner-left-down\"] = \"rbxassetid://7733764448\",\n        [\"corner-left-up\"] = \"rbxassetid://7733764536\",\n        [\"corner-right-down\"] = \"rbxassetid://7733764605\",\n        [\"corner-right-up\"] = \"rbxassetid://7733764680\",\n        [\"corner-up-left\"] = \"rbxassetid://7733764800\",\n        [\"corner-up-right\"] = \"rbxassetid://7733764915\",\n        cpu = \"rbxassetid://7733765045\",\n        crop = \"rbxassetid://7733765140\",\n        cross = \"rbxassetid://7733765224\",\n        crosshair = \"rbxassetid://7733765307\",\n        crown = \"rbxassetid://7733765398\",\n        currency = \"rbxassetid://7733765592\",\n        database = \"rbxassetid://7743866778\",\n        delete = \"rbxassetid://7733768142\",\n        divide = \"rbxassetid://7733769365\",\n        [\"divide-circle\"] = \"rbxassetid://7733769152\",\n        [\"divide-square\"] = \"rbxassetid://7733769261\",\n        [\"dollar-sign\"] = \"rbxassetid://7733770599\",\n        download = \"rbxassetid://7733770755\",\n        [\"download-cloud\"] = \"rbxassetid://7733770689\",\n        dribbble = \"rbxassetid://7733770843\",\n        droplet = \"rbxassetid://7733770982\",\n        droplets = \"rbxassetid://7733771078\",\n        edit = \"rbxassetid://7733771472\",\n        [\"edit-2\"] = \"rbxassetid://7733771217\",\n        [\"edit-3\"] = \"rbxassetid://7733771361\",\n        electricity = \"rbxassetid://7733771628\",\n        [\"electricity-off\"] = \"rbxassetid://7733771563\",\n        equal = \"rbxassetid://7733771811\",\n        [\"equal-not\"] = \"rbxassetid://7733771726\",\n        euro = \"rbxassetid://7733771891\",\n        expand = \"rbxassetid://7733771982\",\n        [\"external-link\"] = \"rbxassetid://7743866903\",\n        eye = \"rbxassetid://7733774602\",\n        [\"eye-off\"] = \"rbxassetid://7733774495\",\n        [\"fast-forward\"] = \"rbxassetid://7743867090\",\n        feather = \"rbxassetid://7733777166\",\n        figma = \"rbxassetid://7743867310\",\n        file = \"rbxassetid://7733793319\",\n        [\"file-check\"] = \"rbxassetid://7733779668\",\n        [\"file-check-2\"] = \"rbxassetid://7733779610\",\n        [\"file-code\"] = \"rbxassetid://7733779730\",\n        [\"file-digit\"] = \"rbxassetid://7733935829\",\n        [\"file-input\"] = \"rbxassetid://7733935917\",\n        [\"file-minus\"] = \"rbxassetid://7733936115\",\n        [\"file-minus-2\"] = \"rbxassetid://7733936010\",\n        [\"file-output\"] = \"rbxassetid://7733788742\",\n        [\"file-plus\"] = \"rbxassetid://7733788885\",\n        [\"file-plus-2\"] = \"rbxassetid://7733788816\",\n        [\"file-search\"] = \"rbxassetid://7733788966\",\n        [\"file-text\"] = \"rbxassetid://7733789088\",\n        [\"file-x\"] = \"rbxassetid://7733938136\",\n        [\"file-x-2\"] = \"rbxassetid://7743867554\",\n        files = \"rbxassetid://7743867811\",\n        film = \"rbxassetid://7733942579\",\n        filter = \"rbxassetid://7733798407\",\n        flag = \"rbxassetid://7733798691\",\n        [\"flag-triangle-left\"] = \"rbxassetid://7733798509\",\n        [\"flag-triangle-right\"] = \"rbxassetid://7733798634\",\n        flame = \"rbxassetid://7733798747\",\n        flashlight = \"rbxassetid://7733798851\",\n        [\"flashlight-off\"] = \"rbxassetid://7733798799\",\n        [\"flask-conical\"] = \"rbxassetid://7733798901\",\n        [\"flask-round\"] = \"rbxassetid://7733798957\",\n        folder = \"rbxassetid://7733799185\",\n        [\"folder-minus\"] = \"rbxassetid://7733799022\",\n        [\"folder-plus\"] = \"rbxassetid://7733799092\",\n        [\"form-input\"] = \"rbxassetid://7733799275\",\n        forward = \"rbxassetid://7733799371\",\n        framer = \"rbxassetid://7733799486\",\n        frown = \"rbxassetid://7733799591\",\n        [\"function-square\"] = \"rbxassetid://7733799682\",\n        gamepad = \"rbxassetid://7733799901\",\n        [\"gamepad-2\"] = \"rbxassetid://7733799795\",\n        gauge = \"rbxassetid://7733799969\",\n        gavel = \"rbxassetid://7733800044\",\n        gem = \"rbxassetid://7733942651\",\n        ghost = \"rbxassetid://7743868000\",\n        gift = \"rbxassetid://7733946818\",\n        [\"gift-card\"] = \"rbxassetid://7733945018\",\n        [\"git-branch\"] = \"rbxassetid://7733949149\",\n        [\"git-branch-plus\"] = \"rbxassetid://7743868200\",\n        [\"git-commit\"] = \"rbxassetid://7743868360\",\n        [\"git-merge\"] = \"rbxassetid://7733952195\",\n        [\"git-pull-request\"] = \"rbxassetid://7733952287\",\n        github = \"rbxassetid://7733954058\",\n        gitlab = \"rbxassetid://7733954246\",\n        glasses = \"rbxassetid://7733954403\",\n        globe = \"rbxassetid://7733954760\",\n        [\"globe-2\"] = \"rbxassetid://7733954611\",\n        grab = \"rbxassetid://7733954884\",\n        [\"graduation-cap\"] = \"rbxassetid://7733955058\",\n        grid = \"rbxassetid://7733955179\",\n        [\"grip-horizontal\"] = \"rbxassetid://7733955302\",\n        [\"grip-vertical\"] = \"rbxassetid://7733955410\",\n        hammer = \"rbxassetid://7733955511\",\n        hand = \"rbxassetid://7733955740\",\n        [\"hand-metal\"] = \"rbxassetid://7733955664\",\n        [\"hard-drive\"] = \"rbxassetid://7733955793\",\n        [\"hard-hat\"] = \"rbxassetid://7733955850\",\n        hash = \"rbxassetid://7733955906\",\n        haze = \"rbxassetid://7733955969\",\n        headphones = \"rbxassetid://7733956063\",\n        heart = \"rbxassetid://7733956134\",\n        [\"help-circle\"] = \"rbxassetid://7733956210\",\n        hexagon = \"rbxassetid://7743868527\",\n        highlighter = \"rbxassetid://7743868648\",\n        history = \"rbxassetid://7733960880\",\n        home = \"rbxassetid://7733960981\",\n        image = \"rbxassetid://7733964126\",\n        [\"image-minus\"] = \"rbxassetid://7733963797\",\n        [\"image-off\"] = \"rbxassetid://7733963907\",\n        [\"image-plus\"] = \"rbxassetid://7733964016\",\n        import = \"rbxassetid://7733964240\",\n        inbox = \"rbxassetid://7733964370\",\n        indent = \"rbxassetid://7733964452\",\n        [\"indian-rupee\"] = \"rbxassetid://7733964536\",\n        infinity = \"rbxassetid://7733964640\",\n        info = \"rbxassetid://7733964719\",\n        inspect = \"rbxassetid://7733964808\",\n        italic = \"rbxassetid://7733964917\",\n        [\"jersey-pound\"] = \"rbxassetid://7733965029\",\n        key = \"rbxassetid://7733965118\",\n        landmark = \"rbxassetid://7733965184\",\n        languages = \"rbxassetid://7733965249\",\n        laptop = \"rbxassetid://7733965386\",\n        [\"laptop-2\"] = \"rbxassetid://7733965313\",\n        lasso = \"rbxassetid://7733967892\",\n        [\"lasso-select\"] = \"rbxassetid://7743868832\",\n        layers = \"rbxassetid://7743868936\",\n        layout = \"rbxassetid://7733970543\",\n        [\"layout-dashboard\"] = \"rbxassetid://7733970318\",\n        [\"layout-grid\"] = \"rbxassetid://7733970390\",\n        [\"layout-list\"] = \"rbxassetid://7733970442\",\n        [\"layout-template\"] = \"rbxassetid://7733970494\",\n        library = \"rbxassetid://7743869054\",\n        [\"life-buoy\"] = \"rbxassetid://7733973479\",\n        lightbulb = \"rbxassetid://7733975185\",\n        [\"lightbulb-off\"] = \"rbxassetid://7733975123\",\n        link = \"rbxassetid://7733978098\",\n        [\"link-2\"] = \"rbxassetid://7743869163\",\n        [\"link-2-off\"] = \"rbxassetid://7733975283\",\n        list = \"rbxassetid://7743869612\",\n        [\"list-checks\"] = \"rbxassetid://7743869317\",\n        [\"list-minus\"] = \"rbxassetid://7733980795\",\n        [\"list-ordered\"] = \"rbxassetid://7743869411\",\n        [\"list-plus\"] = \"rbxassetid://7733984995\",\n        [\"list-x\"] = \"rbxassetid://7743869517\",\n        loader = \"rbxassetid://7733992358\",\n        [\"loader-2\"] = \"rbxassetid://7733989869\",\n        locate = \"rbxassetid://7733992469\",\n        [\"locate-fixed\"] = \"rbxassetid://7733992424\",\n        lock = \"rbxassetid://7733992528\",\n        [\"log-in\"] = \"rbxassetid://7733992604\",\n        [\"log-out\"] = \"rbxassetid://7733992677\",\n        mail = \"rbxassetid://7733992732\",\n        map = \"rbxassetid://7733992829\",\n        [\"map-pin\"] = \"rbxassetid://7733992789\",\n        maximize = \"rbxassetid://7733992982\",\n        [\"maximize-2\"] = \"rbxassetid://7733992901\",\n        megaphone = \"rbxassetid://7733993049\",\n        meh = \"rbxassetid://7733993147\",\n        menu = \"rbxassetid://7733993211\",\n        [\"message-circle\"] = \"rbxassetid://7733993311\",\n        [\"message-square\"] = \"rbxassetid://7733993369\",\n        mic = \"rbxassetid://7743869805\",\n        [\"mic-off\"] = \"rbxassetid://7743869714\",\n        minimize = \"rbxassetid://7733997941\",\n        [\"minimize-2\"] = \"rbxassetid://7733997870\",\n        minus = \"rbxassetid://7734000129\",\n        [\"minus-circle\"] = \"rbxassetid://7733998053\",\n        [\"minus-square\"] = \"rbxassetid://7743869899\",\n        monitor = \"rbxassetid://7734002839\",\n        [\"monitor-off\"] = \"rbxassetid://7734000184\",\n        [\"monitor-speaker\"] = \"rbxassetid://7743869988\",\n        moon = \"rbxassetid://7743870134\",\n        [\"more-horizontal\"] = \"rbxassetid://7734006080\",\n        [\"more-vertical\"] = \"rbxassetid://7734006187\",\n        mountain = \"rbxassetid://7734008868\",\n        [\"mountain-snow\"] = \"rbxassetid://7743870286\",\n        [\"mouse-pointer\"] = \"rbxassetid://7743870392\",\n        [\"mouse-pointer-2\"] = \"rbxassetid://7734010405\",\n        [\"mouse-pointer-click\"] = \"rbxassetid://7734010488\",\n        move = \"rbxassetid://7743870731\",\n        [\"move-diagonal\"] = \"rbxassetid://7743870505\",\n        [\"move-diagonal-2\"] = \"rbxassetid://7734013178\",\n        [\"move-horizontal\"] = \"rbxassetid://7734016210\",\n        [\"move-vertical\"] = \"rbxassetid://7743870608\",\n        music = \"rbxassetid://7734020554\",\n        navigation = \"rbxassetid://7734020989\",\n        [\"navigation-2\"] = \"rbxassetid://7734020942\",\n        network = \"rbxassetid://7734021047\",\n        no_entry = \"rbxassetid://7734021118\",\n        octagon = \"rbxassetid://7734021165\",\n        [\"on-charge\"] = \"rbxassetid://7734021231\",\n        option = \"rbxassetid://7734021300\",\n        outdent = \"rbxassetid://7734021384\",\n        package = \"rbxassetid://7734021469\",\n        palette = \"rbxassetid://7734021595\",\n        paperclip = \"rbxassetid://7734021680\",\n        pause = \"rbxassetid://7734021897\",\n        [\"pause-circle\"] = \"rbxassetid://7734021767\",\n        [\"pause-octagon\"] = \"rbxassetid://7734021827\",\n        [\"pen-tool\"] = \"rbxassetid://7734022041\",\n        pencil = \"rbxassetid://7734022107\",\n        percent = \"rbxassetid://7743870852\",\n        [\"person-standing\"] = \"rbxassetid://7743871002\",\n        phone = \"rbxassetid://7734032056\",\n        [\"phone-call\"] = \"rbxassetid://7734027264\",\n        [\"phone-forwarded\"] = \"rbxassetid://7734027345\",\n        [\"phone-incoming\"] = \"rbxassetid://7743871120\",\n        [\"phone-missed\"] = \"rbxassetid://7734029465\",\n        [\"phone-off\"] = \"rbxassetid://7734029534\",\n        [\"phone-outgoing\"] = \"rbxassetid://7743871253\",\n        [\"pie-chart\"] = \"rbxassetid://7734034378\",\n        [\"piggy-bank\"] = \"rbxassetid://7734034513\",\n        pipette = \"rbxassetid://7743871384\",\n        plane = \"rbxassetid://7734037723\",\n        play = \"rbxassetid://7743871480\",\n        [\"play-circle\"] = \"rbxassetid://7734037784\",\n        plus = \"rbxassetid://7734042071\",\n        [\"plus-circle\"] = \"rbxassetid://7734040271\",\n        [\"plus-square\"] = \"rbxassetid://7734040369\",\n        pocket = \"rbxassetid://7734042139\",\n        podcast = \"rbxassetid://7734042234\",\n        pointer = \"rbxassetid://7734042307\",\n        [\"pound-sterling\"] = \"rbxassetid://7734042354\",\n        power = \"rbxassetid://7734042493\",\n        [\"power-off\"] = \"rbxassetid://7734042423\",\n        printer = \"rbxassetid://7734042580\",\n        [\"qr-code\"] = \"rbxassetid://7743871575\",\n        quote = \"rbxassetid://7734045100\",\n        radio = \"rbxassetid://7743871662\",\n        [\"radio-receiver\"] = \"rbxassetid://7734045155\",\n        redo = \"rbxassetid://7743871739\",\n        [\"refresh-ccw\"] = \"rbxassetid://7734050715\",\n        [\"refresh-cw\"] = \"rbxassetid://7734051052\",\n        regex = \"rbxassetid://7734051188\",\n        [\"repeat\"] = \"rbxassetid://7734051454\",\n        [\"repeat-1\"] = \"rbxassetid://7734051342\",\n        reply = \"rbxassetid://7734051594\",\n        [\"reply-all\"] = \"rbxassetid://7734051524\",\n        rewind = \"rbxassetid://7734051670\",\n        [\"rocking-chair\"] = \"rbxassetid://7734051769\",\n        [\"rotate-ccw\"] = \"rbxassetid://7734051861\",\n        [\"rotate-cw\"] = \"rbxassetid://7734051957\",\n        rss = \"rbxassetid://7734052075\",\n        ruler = \"rbxassetid://7734052157\",\n        [\"russian-ruble\"] = \"rbxassetid://7734052248\",\n        save = \"rbxassetid://7734052335\",\n        scale = \"rbxassetid://7734052454\",\n        scissors = \"rbxassetid://7734052570\",\n        [\"screen-share\"] = \"rbxassetid://7734052814\",\n        [\"screen-share-off\"] = \"rbxassetid://7734052653\",\n        search = \"rbxassetid://7734052925\",\n        send = \"rbxassetid://7734053039\",\n        [\"separator-horizontal\"] = \"rbxassetid://7734053146\",\n        [\"separator-vertical\"] = \"rbxassetid://7734053213\",\n        server = \"rbxassetid://7734053426\",\n        [\"server-crash\"] = \"rbxassetid://7734053281\",\n        [\"server-off\"] = \"rbxassetid://7734053361\",\n        settings = \"rbxassetid://7734053495\",\n        share = \"rbxassetid://7734053697\",\n        [\"share-2\"] = \"rbxassetid://7734053595\",\n        sheet = \"rbxassetid://7743871876\",\n        shield = \"rbxassetid://7734056608\",\n        [\"shield-alert\"] = \"rbxassetid://7734056326\",\n        [\"shield-check\"] = \"rbxassetid://7734056411\",\n        [\"shield-close\"] = \"rbxassetid://7734056470\",\n        [\"shield-off\"] = \"rbxassetid://7734056540\",\n        shirt = \"rbxassetid://7734056672\",\n        [\"shopping-bag\"] = \"rbxassetid://7734056747\",\n        [\"shopping-cart\"] = \"rbxassetid://7734056813\",\n        shovel = \"rbxassetid://7734056878\",\n        shrink = \"rbxassetid://7734056971\",\n        shuffle = \"rbxassetid://7734057059\",\n        sidebar = \"rbxassetid://7734058260\",\n        [\"sidebar-close\"] = \"rbxassetid://7734058092\",\n        [\"sidebar-open\"] = \"rbxassetid://7734058165\",\n        sigma = \"rbxassetid://7734058345\",\n        [\"skip-back\"] = \"rbxassetid://7734058404\",\n        [\"skip-forward\"] = \"rbxassetid://7734058495\",\n        skull = \"rbxassetid://7734058599\",\n        sliders = \"rbxassetid://7734058803\",\n        smartphone = \"rbxassetid://7734058979\",\n        [\"smartphone-charging\"] = \"rbxassetid://7734058894\",\n        smile = \"rbxassetid://7734059095\",\n        snowflake = \"rbxassetid://7734059180\",\n        [\"sort-asc\"] = \"rbxassetid://7734060715\",\n        [\"sort-desc\"] = \"rbxassetid://7743871973\",\n        speaker = \"rbxassetid://7734063416\",\n        sprout = \"rbxassetid://7743872071\",\n        square = \"rbxassetid://7743872181\",\n        star = \"rbxassetid://7734068321\",\n        [\"star-half\"] = \"rbxassetid://7734068258\",\n        [\"stop-circle\"] = \"rbxassetid://7734068379\",\n        strikethrough = \"rbxassetid://7734068425\",\n        sun = \"rbxassetid://7734068495\",\n        sunrise = \"rbxassetid://7743872365\",\n        sunset = \"rbxassetid://7734070982\",\n        [\"swiss-franc\"] = \"rbxassetid://7734071038\",\n        [\"switch-camera\"] = \"rbxassetid://7743872492\",\n        table = \"rbxassetid://7734073253\",\n        tablet = \"rbxassetid://7743872620\",\n        tag = \"rbxassetid://7734075797\",\n        target = \"rbxassetid://7743872758\",\n        tent = \"rbxassetid://7734078943\",\n        terminal = \"rbxassetid://7743872929\",\n        [\"terminal-square\"] = \"rbxassetid://7734079055\",\n        thermometer = \"rbxassetid://7734084149\",\n        [\"thermometer-snowflake\"] = \"rbxassetid://7743873074\",\n        [\"thermometer-sun\"] = \"rbxassetid://7734084018\",\n        [\"thumbs-down\"] = \"rbxassetid://7734084236\",\n        [\"thumbs-up\"] = \"rbxassetid://7743873212\",\n        ticket = \"rbxassetid://7734086558\",\n        timer = \"rbxassetid://7743873443\",\n        [\"timer-reset\"] = \"rbxassetid://7743873336\",\n        [\"toggle-left\"] = \"rbxassetid://7734091286\",\n        [\"toggle-right\"] = \"rbxassetid://7743873539\",\n        tornado = \"rbxassetid://7743873633\",\n        trash = \"rbxassetid://7743873871\",\n        [\"trash-2\"] = \"rbxassetid://7743873772\",\n        trello = \"rbxassetid://7743873996\",\n        [\"trending-down\"] = \"rbxassetid://7743874143\",\n        [\"trending-up\"] = \"rbxassetid://7743874262\",\n        triangle = \"rbxassetid://7743874367\",\n        truck = \"rbxassetid://7743874482\",\n        tv = \"rbxassetid://7743874674\",\n        [\"tv-2\"] = \"rbxassetid://7743874599\",\n        type = \"rbxassetid://7743874740\",\n        umbrella = \"rbxassetid://7743874820\",\n        underline = \"rbxassetid://7743874904\",\n        undo = \"rbxassetid://7743874974\",\n        unlink = \"rbxassetid://7743875149\",\n        [\"unlink-2\"] = \"rbxassetid://7743875069\",\n        unlock = \"rbxassetid://7743875263\",\n        upload = \"rbxassetid://7743875428\",\n        [\"upload-cloud\"] = \"rbxassetid://7743875358\",\n        user = \"rbxassetid://7743875962\",\n        [\"user-check\"] = \"rbxassetid://7743875503\",\n        [\"user-minus\"] = \"rbxassetid://7743875629\",\n        [\"user-plus\"] = \"rbxassetid://7743875759\",\n        [\"user-x\"] = \"rbxassetid://7743875879\",\n        users = \"rbxassetid://7743876054\",\n        verified = \"rbxassetid://7743876142\",\n        vibrate = \"rbxassetid://7743876302\",\n        video = \"rbxassetid://7743876610\",\n        [\"video-off\"] = \"rbxassetid://7743876466\",\n        view = \"rbxassetid://7743876754\",\n        voicemail = \"rbxassetid://7743876916\",\n        volume = \"rbxassetid://7743877487\",\n        [\"volume-1\"] = \"rbxassetid://7743877081\",\n        [\"volume-2\"] = \"rbxassetid://7743877250\",\n        [\"volume-x\"] = \"rbxassetid://7743877381\",\n        wallet = \"rbxassetid://7743877573\",\n        watch = \"rbxassetid://7743877668\",\n        webcam = \"rbxassetid://7743877896\",\n        wifi = \"rbxassetid://7743878148\",\n        [\"wifi-off\"] = \"rbxassetid://7743878056\",\n        wind = \"rbxassetid://7743878264\",\n        wrench = \"rbxassetid://7743878358\",\n        x = \"rbxassetid://7743878857\",\n        [\"x-circle\"] = \"rbxassetid://7743878496\",\n        [\"x-octagon\"] = \"rbxassetid://7743878618\",\n        [\"x-square\"] = \"rbxassetid://7743878737\",\n        [\"zoom-in\"] = \"rbxassetid://7743878977\",\n        [\"zoom-out\"] = \"rbxassetid://7743879082\",\n    },\n}\n</code></pre>","tags":["Modules"]},{"location":"Modules/Scheme/","title":"Scheme","text":"<p>Scheme is used to store colors and typography set of a theme scheme. Components use this module to define their appearance.</p> <p>Lydie supports theming and theme-switching in real-time without having to reload. Developers can also fork Lydie and create/modify schemes to adapt to their game environment/theme.</p>","tags":["Modules"]},{"location":"Modules/Scheme/#properties","title":"Properties","text":"Name Description Type Schemes A list of schemes detected by Lydie <code>EnumList</code> Current The name of the currently applied scheme <code>string</code>","tags":["Modules"]},{"location":"Modules/Scheme/#functions","title":"Functions","text":"Name Description <code>Switch: (enumTheme: string) -&gt; ()</code> Switch to other schemes, they should be in the <code>Scheme.Schemes</code> list <code>SetAccent: (accent: Color3) -&gt; ()</code> Set the accent theme to another color, default is pink <code>GetAnimated: (state: Fusion.Value&lt;any&gt;) -&gt; (Fusion.Tween&lt;Fusion.Value&lt;any&gt;&gt;)</code> Provide an animated version of the state so there will be a smooth transition between changes","tags":["Modules"]},{"location":"Modules/Scheme/#scheme-template","title":"Scheme template","text":"Light.luau<pre><code>-- 7kayoh\n-- Light.lua\n-- 03 February 2022\nreturn {\n    Elevation = {\n        Color3.fromRGB(200, 200, 200),\n        Color3.fromRGB(245, 245, 245),\n        Color3.fromRGB(250, 250, 255),\n        Color3.fromRGB(255, 255, 255),\n    },\n    Typography = {\n        HeroLarge = { Font = Enum.Font.GothamBold, Size = 28 },\n        Hero = { Font = Enum.Font.GothamMedium, Size = 25 },\n        Header = { Font = Enum.Font.GothamBold, Size = 14 },\n        Subheader = { Font = Enum.Font.Gotham, Size = 14 },\n        Body = { Font = Enum.Font.Gotham, Size = 16 },\n        Button = { Font = Enum.Font.GothamBold, Size = 16 },\n        Secondary = { Font = Enum.Font.GothamMedium, Size = 14 },\n        Caption = { Font = Enum.Font.GothamBold, Size = 14 },\n    },\n    Color = {\n        Red = Color3.fromRGB(255, 47, 57),\n        Green = Color3.fromRGB(19, 175, 53),\n        Blue = Color3.fromRGB(20, 103, 199),\n        Amber = Color3.fromRGB(177, 123, 7),\n        Orange = Color3.fromRGB(255, 79, 10),\n        Pink = Color3.fromRGB(255, 10, 145),\n        Purple = Color3.fromRGB(125, 45, 255),\n        Indigo = Color3.fromRGB(83, 45, 255),\n        Teal = Color3.fromRGB(13, 107, 77),\n        Mint = Color3.fromRGB(0, 138, 128),\n        Mono = {\n            Color3.fromRGB(0, 0, 0),\n            Color3.fromRGB(25, 25, 25),\n            Color3.fromRGB(50, 50, 50),\n            Color3.fromRGB(75, 75, 75),\n            Color3.fromRGB(150, 150, 150),\n            Color3.fromRGB(200, 200, 200),\n            Color3.fromRGB(225, 225, 225),\n            Color3.fromRGB(240, 240, 240),\n            Color3.fromRGB(255, 255, 255),\n        },\n        Text = {\n            Primary = Color3.fromRGB(0, 0, 0),\n            Secondary = Color3.fromRGB(100, 100, 100),\n            Tertiary = Color3.fromRGB(150, 150, 150),\n        },\n        Divider = Color3.fromRGB(200, 200, 200),\n    },\n}\n</code></pre>","tags":["Modules"]},{"location":"Modules/SharedStates/","title":"SharedStates","text":"<p>SharedStates is a container of states to be used globally across the user workspace. There are no functionalities provided by this module and is just used as a container only.</p>","tags":["Modules"]},{"location":"Tutorials/ImportingLydie/","title":"Importing Lydie","text":"<p>When integrating Lydie as a variable within your code, it yields a structured dictionary in the Lua programming language. The dictionary structure is as follows: Lydie.luau<pre><code>{\n    Components = require(script.Components),\n    Modules = require(script.Modules),\n}\n</code></pre></p> <ul> <li><code>Components</code>: This key accesses a dictionary containing a comprehensive collection of UI components accessible within Lydie. These components are categorized based on their functionality, distinguishing between interactive elements and window decorations.</li> <li><code>Modules</code>: This key provides access to another dictionary housing the modules packaged with Lydie. These modules play a pivotal role in constructing the various components available within Lydie's interface.</li> </ul>"},{"location":"Tutorials/InstallingLydie/","title":"Installing Lydie","text":"<p>Lydie is built around Wally packages, because of that, installation of Lydie and its dependencies should be installed the same as how Wally intended to.</p>"},{"location":"Tutorials/InstallingLydie/#with-rojo","title":"with wally recommended","text":"<p>Lydie is published as a Wally package and can be installed as long as your game source code is saved in the filesystem. Edit your <code>wally.toml</code> configuration file and install the package:</p> wally.toml<pre><code>[dependencies]\nFusion = \"elttob/fusion@0.2.0\"\nLydie = \"7kayoh/lydie@0.1.0\"\n</code></pre> terminal<pre><code>wally install\n</code></pre> <p>This will install Lydie into the <code>Packages</code> directory, the actual location of the folder in-game depends on your Rojo project configuration, but it is usually in <code>ReplicatedStorage</code>.</p>"},{"location":"Tutorials/InstallingLydie/#with-rbxm","title":"with rbxm","text":"<p>If you edit your game in Roblox Studio, it may be more appropriate to directly install Lydie with the released <code>rbxm</code> file from the repository. Download the latest release here and insert it into your game.</p>"},{"location":"Tutorials/UsingLydie/","title":"Using Lydie","text":"<p>Lydie follows the same code pattern found in Fusion, all components are wrapped in a function and can be created by calling it with the properties table. Like: <pre><code>local Lydie = require(Packages.Lydie)\n\nLydie.Components.Divider {\n    Size = UDim2.new(1, 0, 0, 1),\n    ZIndex = 2,\n}\n</code></pre></p>"},{"location":"Tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"Tags/#buttons","title":"Buttons","text":"<ul> <li>AppBarButton</li> <li>AppTabBarButton</li> <li>BaseButton</li> <li>IconButton</li> <li>IconTextButton</li> <li>TextButton</li> </ul>"},{"location":"Tags/#components","title":"Components","text":"<ul> <li>Divider</li> <li>Shadow</li> <li>Checkbox</li> <li>Slider</li> <li>TextField</li> <li>Toggle</li> <li>AppBarButton</li> <li>AppTabBarButton</li> <li>BaseButton</li> <li>IconButton</li> <li>IconTextButton</li> <li>TextButton</li> <li>AppTabBar</li> <li>BottomAppBar</li> <li>ToolTip</li> <li>TopAppBar</li> <li>Window</li> </ul>"},{"location":"Tags/#controls","title":"Controls","text":"<ul> <li>Checkbox</li> <li>Slider</li> <li>TextField</li> <li>Toggle</li> <li>AppBarButton</li> <li>AppTabBarButton</li> <li>BaseButton</li> <li>IconButton</li> <li>IconTextButton</li> <li>TextButton</li> </ul>"},{"location":"Tags/#modules","title":"Modules","text":"<ul> <li>Constants</li> <li>EnumList</li> <li>Icons</li> <li>Scheme</li> <li>SharedStates</li> </ul>"},{"location":"Tags/#tabs","title":"Tabs","text":"<ul> <li>AppTabBarButton</li> <li>AppTabBar</li> </ul>"},{"location":"Tags/#view","title":"View","text":"<ul> <li>AppTabBar</li> <li>BottomAppBar</li> <li>ToolTip</li> <li>TopAppBar</li> <li>Window</li> </ul>"},{"location":"Tags/#window","title":"Window","text":"<ul> <li>AppBarButton</li> <li>AppTabBarButton</li> <li>AppTabBar</li> <li>BottomAppBar</li> <li>TopAppBar</li> <li>Window</li> </ul>"}]}